@page "/"
@using System.ComponentModel.DataAnnotations

<h1>Submitting a form without a button</h1>

<p>
    This repository show cases various attempts to deal with a Blazor form that lacks a submit button. The goal is to
    have a single textarea which the user can submit via a Ctrl+Enter key combinaton. Validation errors should be shown
    to the user once they attempt to submit. I do not want errors to show up as they type.
</p>

<dl>
    <dt>
        <a href="/edit-context-with-input-text-area">
            EditContextWithInputTextArea
        </a>
    </dt>
    <dd>
        <p>
            This example makes use of an Edit Context and the built-in
            InputTextArea. It does not work as intended as the form fails to
            validate the model appropriately.
        </p>
    </dd>

    <dt>
        <a href="/edit-context-with-custom-input-text-area">
            EditContextWithCustomInputTextArea
        </a>
    </dt>
    <dd>
        <p>
            This example expands on the previous example by using a custom input text area class. This new class binds
            the textarea value on input instead of onchange.
        </p>

        <p>
            As a result of this change, the validation check on Ctrl-Enter is now accurate. However, validation is
            firing as the user types, which doesn't strike me as a particularly good user experience.
        </p>
    </dd>

    <dt>
        <a href="/custom-input-text-area-with-validation-display-control">
            CustomInputTextAreaWithValidationDisplayControl
        </a>
    </dt>
    <dd>
        <p>
            This example expands on the previous example by hiding the validation messages unless the user has
            specifically tried to submit the form. This is the closest I have been able to get to a working example.
        </p>
    </dd>
</dl>